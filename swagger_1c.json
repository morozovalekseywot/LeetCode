{
  "openapi": "3.0.1",
  "info": {
    "title": "Партнерский API 1С:ГРМ",
    "description": "Сервис \"1С:ГРМ\" - это PaaS, который предлагает Партнерам 1С широкие возможности по интеграции со сторонними сервисами. Это позволяет Партнёрам фирмы 1С предлагать своим клиентам набор WhiteLabel сервисов как для перепродажи, так и для включения в комплексные наборы услуг.\n\nДанный универсальный API предоставляет набор методов для работы с базами клиентов (создать, удалить, обновить и т.п.), а так же для создания и отслеживания статуса заказов в облаке."
  },
  "servers": [
    {
      "url": "https://service-api.1capp.com/partner-api/v2",
      "description": "Generated server url"
    }
  ],
  "security": [
    {
      "bearer-jwt": [
        "read",
        "write"
      ]
    }
  ],
  "paths": {
    "/configurations/{configurationId}/versions/{versionId}": {
      "put": {
        "tags": [
          "Configurations"
        ],
        "summary": "Изменение версии конфигурации",
        "description": "У версии конфигурации могут быть изменены имя и комментарий. Чтобы изменить желаемые параметры, нужно в данном запросе передать сущность ConfigurationVersionPutRequest с заполненными полями name и comment.",
        "operationId": "patchConfigurationVersion",
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationVersionPutRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationVersion"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Configurations"
        ],
        "summary": "Удаление версии конфигурации",
        "operationId": "deleteConfigurationVersion",
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/applications/{applicationId}/update/platformVersions": {
      "put": {
        "tags": [
          "Applications"
        ],
        "summary": "Обновить версию платформы приложения",
        "description": "Чтобы обновить версию платформы в параметре запроса нужно передать версию платформы. Чтобы получить список доступных платформ, нужно сделать запрос по пути /applications/platformVersions.",
        "operationId": "updatePlatformVersion",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "platformVersionId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/applications/{applicationId}/update/licenseCount": {
      "put": {
        "tags": [
          "Applications"
        ],
        "summary": "Обновить количество лицензий приложения",
        "operationId": "updateLicenseCount",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "licenseCount",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/orders/update": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Отправление запроса на изменение приложения",
        "description": "Чтобы добавить к сервису опций, укажите subscriptionId и serviceKitId этого сервиса. В списке addOptions (обязательно не пустом) указывается serviceKitOptionId (идентификатор опции для serviceKitId) и добавляемое количество этой опции",
        "operationId": "updateOrderRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OWLOrderBaseDto"
                }
              }
            }
          }
        }
      }
    },
    "/orders/submit": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Отправление запроса на заказ приложения",
        "description": "Чтобы сделать заказ, необходимо заполнить форму заказа. В форме заказа необходимо указать serviceKitId, usageCount и информацию о клиенте. Если клиент уже существует, то необходимо заполнить только поле customerId. Если подразумевается создание нового клиента, то необходимо заполнить поля, связанные с информацией о клиенте: customerResponsible, customerEmail, customerPhone. \nОсобое внимание стоит уделить флагу forced. Этот флаг отвечает за форсирование заказа. В случае, когда данный флаг имеет значение true, для клиента будет создано приложение вне зависимости от того, была ли у него демо-версия данного приложения или нет. Если флаг имеет значение false, тогда заказ не будет выполнен в том случае, если у клиента уже имеется или имелась демо-версия данного приложения. В списке serviceKitOptions (может быть пуст или вообще отсутствовать) указывается serviceKitOptionId (идентификатор опции для serviceKitId) и добавляемое количество этой опции",
        "operationId": "submitOrderRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderSubmit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          }
        }
      }
    },
    "/customers/registration": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Отправление запроса на регистрацию нового клиента",
        "operationId": "submitCustomerRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerRegistrationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerRegistrationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/configurations": {
      "get": {
        "tags": [
          "Configurations"
        ],
        "summary": "Получение списка существующих конфигураций",
        "operationId": "getConfigurations",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Configuration"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Configurations"
        ],
        "summary": "Создание новой конфигурации",
        "description": "Для того, чтобы создать новую конфигурацию, в теле запроса необходимо передать сущность ConfigurationAddRequest с обязательно заполненными полями name и nomenclatureId. NomenclatureId можно получить, сделав запрос по по пути /configurations/nomenclatures.",
        "operationId": "addConfiguration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationAddRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Configuration"
                }
              }
            }
          }
        }
      }
    },
    "/configurations/{configurationId}/versions": {
      "get": {
        "tags": [
          "Configurations"
        ],
        "summary": "Получение списка версий конфигурации",
        "operationId": "getConfigurationVersions",
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConfigurationVersion"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Configurations"
        ],
        "summary": "Создание новой версии конфигурации",
        "description": "Для создания новой версии конфигурации необходимо передать сущность ConfigurationVersionAddRequest с обязательно заполненными полями name и version. При удачном создании конфигурации в теле ответа будет находиться сущность новой версии конфигурации.\nP.S. Для дальнейшего использования версии конфигурации для создания из нее приложения, необходимо загрузить файл конфигурации.",
        "operationId": "addConfigurationVersion",
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationVersionAddRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationVersion"
                }
              }
            }
          }
        }
      }
    },
    "/applications": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Получение списка приложений",
        "operationId": "getPartnerApplications",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Application"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Applications"
        ],
        "summary": "Создание приложения из частной конфигурации",
        "description": "Чтобы создать приложение из частной конфигурации, необходимо в сущности CreateApplicationFromCustomConfigurationRequest передать информацию об идентификаторе клиента, индентификаторы конфигурации и ее версии, идентификатор версии платформы, тип информационной базы (file - для файловой, cs - для клиент-серверной), имя приложения и количество лицензий. ",
        "operationId": "createApplicationFromCustomConfiguration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApplicationFromCustomConfigurationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{applicationId}/makeTii": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Метод возвращает список параметров, состоящий из name (имя параметра) и title (описание параметра). Перед тем, как запустить операцию тестирования и исправления, необходимо знать список допустимых параметров ТиИ для той версии платформы 1С, на которой работает данная база.",
        "operationId": "getTiiParams",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TiiParam"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Applications"
        ],
        "summary": "Запуск операции тестирования и исправления. В теле запроса необходимо передать json-объект \"credentials\", состоящий из учетных данных (\"username\", \"password\") к базе, и json-объекта \"properties\", содержащего список имен (\"name\") допустимых параметров ТиИ",
        "operationId": "makeTii",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MakeTiiDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/applications/{applicationId}/exchanges/upload": {
      "post": {
        "tags": [
          "Applications"
        ],
        "summary": "Получение ссылки для загрузки файла в файловый обменник",
        "description": "Чтобы загрузить файл в хранилище, необходимо сдлеать PUT запрос по полученному URL из ExchangeUploadInfo. В тело запроса нужно поместить файл, который вы хотите помести в хранилище.",
        "operationId": "getExchangeUploadUr",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filename",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExchangeUploadInfo"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{applicationId}/exchanges/install": {
      "post": {
        "tags": [
          "Applications"
        ],
        "summary": "Восстановление приложения из файла, который находится в файловом обменнике",
        "operationId": "restoreFromExchange",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filename",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Credentials"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/applications/{applicationId}/exchanges/dump": {
      "post": {
        "tags": [
          "Applications"
        ],
        "summary": "Создание дампа приложения",
        "operationId": "createDumpForApplication",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Credentials"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/applications/{applicationId}/backups": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Получение списка бэкапов приложения",
        "operationId": "getBackups",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Backup"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Applications"
        ],
        "summary": "Создание ручного бэкапа",
        "operationId": "createManualBackup",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Backup"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{applicationId}/backups/{backupId}/restore": {
      "post": {
        "tags": [
          "Applications"
        ],
        "summary": "Восстановление приложения из бэкапа",
        "operationId": "restoreFromBackup",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "backupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Backup"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{applicationId}/action/stop": {
      "post": {
        "tags": [
          "Applications"
        ],
        "summary": "Остановить запущенное приложение",
        "description": "Для остановки приложения необходимо, чтобы оно находилось в состоянии running. При иных статусах состояния приложения остановка совершена не будет.",
        "operationId": "stopApplicationById",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{applicationId}/action/start": {
      "post": {
        "tags": [
          "Applications"
        ],
        "summary": "Запуск остановленного приложения",
        "description": "Для запуска приложения необходимо, чтобы оно находилось в состоянии stopped. При иных статусах состояния приложения запуск совершен не будет.",
        "operationId": "startApplicationById",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{applicationId}/action/restart": {
      "post": {
        "tags": [
          "Applications"
        ],
        "summary": "Перезапуск приложения",
        "description": "Перезапуск приложения возможен только из состояний stopped, running и unknown.",
        "operationId": "restartApplication",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{applicationId}/action/cancelDelete": {
      "post": {
        "tags": [
          "Applications"
        ],
        "summary": "Отмена удаления приложения",
        "operationId": "cancelDeleteApplication",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          }
        }
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Получение списка заказов",
        "operationId": "getOrders",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/update/status": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Получение всех заказов на изменение приложений",
        "operationId": "getUpdateOrderRequests",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OWLOrderBaseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/update/status/{orderId}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Получение статуса запроса на изменение приложения",
        "operationId": "checkUpdateOrderRequest",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OWLOrderBaseDto"
                }
              }
            }
          }
        }
      }
    },
    "/orders/status": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Проверка статуса заказа",
        "operationId": "checkOrder",
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          }
        }
      }
    },
    "/orders/services": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Получение списка сервисов, доступных для заказа",
        "operationId": "getServicesToOrder",
        "responses": {
          "200": {
            "description": "List of services",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceDto"
                }
              }
            }
          }
        }
      }
    },
    "/customers": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Получение списка клиентов",
        "operationId": "getCustomers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Получение клиента по его идентификатору",
        "operationId": "getCustomer",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/applications": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Получение списка приложений клиента",
        "operationId": "getCustomerApplications",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Application"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/registration/{id}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Проверить статус регистрации нового клиента",
        "operationId": "checkRequest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerRegistrationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/findByInn": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Получение клиента по его ИНН",
        "operationId": "getCustomerByInn",
        "parameters": [
          {
            "name": "inn",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kpp",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          }
        }
      }
    },
    "/customers/findByEmail": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Получение клиента по его электронной почте",
        "operationId": "getCustomerByEmail",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          }
        }
      }
    },
    "/configurations/{configurationId}": {
      "get": {
        "tags": [
          "Configurations"
        ],
        "summary": "Получение конфигурации",
        "operationId": "getConfigurationById",
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Configuration"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Configurations"
        ],
        "summary": "Удаление конфигурации",
        "operationId": "deleteConfiguration",
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/configurations/{configurationId}/versions/{versionId}/upload": {
      "get": {
        "tags": [
          "Configurations"
        ],
        "summary": "Получение ссылки для загрузки версии конфигурации",
        "description": "Для загрузки файла конфигурации, необходимо совершить данный запрос для получения ссылки. В параметре filename нужно указать имя файла.\nЧтобы загрузить файл конфигурации в хранилище, необходимо сдлеать PUT запрос по полученному URL из UploadInfo. В тело запроса нужно поместить файл конфигурации.",
        "operationId": "getUploadUrl",
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filename",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UploadInfo"
                }
              }
            }
          }
        }
      }
    },
    "/configurations/nomenclatures": {
      "get": {
        "tags": [
          "Configurations"
        ],
        "summary": "Получение списка доступных номенклатур",
        "operationId": "getNomenclatures",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Nomenclature"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/applications/{applicationId}": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Получение приложения",
        "operationId": "getPartnerApplicationById",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Applications"
        ],
        "summary": "Удаление приложения",
        "description": "Данный запрос отвечает за удаление приложения. \nПараметр postpone является опциональным. Он отвечает за количество дней до удаления. При отправке запроса без этого параметра, приложение будет удалено через 1 день.",
        "operationId": "deleteApplicationById",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "postpone",
            "in": "query",
            "description": "number of days to postpone",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{applicationId}/versions/{versionId}": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Получение версии приложения по ее идентификатору",
        "operationId": "getApplicationVersion",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationVersion"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{applicationId}/resources": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Получение ресурсов приложения",
        "operationId": "getPartnerApplicationResourcesById",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationResource"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/applications/{applicationId}/exchanges": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Получение содержимого файлового обменника",
        "operationId": "getApplicationExchanges",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Exchange"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Applications"
        ],
        "summary": "Удаление файла из файлового обменника",
        "operationId": "deleteExchange",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filename",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/applications/{applicationId}/configuration": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Получение конфигурации приложения",
        "operationId": "getApplicationConfigurationInfo",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Configuration"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{applicationId}/configuration/version": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Получение версии конфигурации, из которой было создано приложение",
        "operationId": "getApplicationVersion_1",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationVersion"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{applicationId}/backups/{backupId}": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Получение бэкапа",
        "operationId": "getBackup",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "backupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Backup"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Applications"
        ],
        "summary": "Удаление ручного бэкапа",
        "operationId": "deleteManualBackup",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "backupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/applications/{applicationId}/backups/byType/{type}": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Получение списка бэкапов определенного типа",
        "description": "Данный метод используется для получения списка бэкапов определенного типа. \nБэкапы бывают трех видов:\n ручные - manual,\n регулярные - regular,\n технические - technical.\nВ пути запроса нужно указать тип бэкапа.",
        "operationId": "getBackupsByCategories",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Backup"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/applications/platformVersions": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Получение списка версий платформы",
        "operationId": "getPlatformVersions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlatformVersion"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/applications/platformVersions/{platformVersionId}": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Получение версии платформы по ее идентификатору",
        "operationId": "getPlatformVersionById",
        "parameters": [
          {
            "name": "platformVersionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformVersion"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ConfigurationVersionPutRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Новое название версии"
          },
          "comment": {
            "type": "string",
            "description": "Новый комментарий"
          }
        }
      },
      "ConfigurationVersion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор версии конфигурации"
          },
          "name": {
            "type": "string",
            "description": "Название версии"
          },
          "date": {
            "type": "string",
            "description": "Дата создания версии",
            "format": "date-time"
          },
          "comment": {
            "type": "string",
            "description": "Комментарий"
          }
        }
      },
      "OrderOption": {
        "required": [
          "serviceKitOptionId",
          "usageCount"
        ],
        "type": "object",
        "properties": {
          "serviceKitOptionId": {
            "type": "string",
            "description": "Идентификатор опции для создаваемого типа ресурса"
          },
          "usageCount": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Количество применений опции",
            "format": "int32"
          }
        },
        "description": "Перечисление опций, которые нужно добавить и в каком количестве"
      },
      "OrderUpdate": {
        "required": [
          "addOptions",
          "serviceKitId",
          "subscriptionId"
        ],
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "Идентификатор сервиса, для которого хотим добавить опции"
          },
          "serviceKitId": {
            "type": "string",
            "description": "Идентификатор типа ресурса заказанного сервиса"
          },
          "addOptions": {
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "description": "Перечисление опций, которые нужно добавить и в каком количестве",
            "items": {
              "$ref": "#/components/schemas/OrderOption"
            }
          }
        }
      },
      "OWLOrderBaseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "processStatus": {
            "type": "string"
          },
          "subscriptionId": {
            "type": "string"
          }
        }
      },
      "OrderSubmit": {
        "required": [
          "serviceKitId",
          "usageCount"
        ],
        "type": "object",
        "properties": {
          "serviceKitId": {
            "type": "string",
            "description": "Идентификатор типа ресурса для создаваемого сервиса"
          },
          "subscriptionName": {
            "type": "string",
            "description": "Имя для создаваемого сервиса"
          },
          "customerId": {
            "type": "string",
            "description": "Идентификатор клиента, для которого делается заказ"
          },
          "customerName": {
            "type": "string",
            "description": "Имя клиента, для которого делается заказ"
          },
          "customerEmail": {
            "type": "string",
            "description": "Адрес электронной почты клиента"
          },
          "customerPhone": {
            "type": "string",
            "description": "Телефон клиента"
          },
          "customerInn": {
            "type": "string",
            "description": "ИНН клиета"
          },
          "customerLogin": {
            "type": "string",
            "description": "Логин клиента от портала"
          },
          "customerResponsible": {
            "type": "string",
            "description": "Ответственное лицо клиента"
          },
          "usageCount": {
            "type": "integer",
            "description": "Необходимое количество лицензий",
            "format": "int32"
          },
          "forced": {
            "type": "boolean",
            "description": "Флаг для форсирования заказа"
          },
          "serviceKitOptions": {
            "type": "array",
            "description": "Дополнительные опции к заказу",
            "items": {
              "$ref": "#/components/schemas/OrderOption"
            }
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор заказа"
          },
          "serviceId": {
            "type": "string",
            "description": "Идентификатор сервиса, на который делается заказ"
          },
          "serviceKitId": {
            "type": "string",
            "description": "Идентификатор типа ресурса для данного сервиса"
          },
          "status": {
            "type": "string",
            "description": "Статус заказа"
          },
          "errorMessage": {
            "type": "string",
            "description": "Сообщение с информацией об ошибке"
          },
          "customerId": {
            "type": "string",
            "description": "Идентификатор клиента, для которого создается сервис"
          },
          "subscriptionId": {
            "type": "string",
            "description": "Идентификатор сервиса, на который сделан заказ"
          },
          "errorCode": {
            "type": "string",
            "description": "Код возникшей ошибки"
          }
        }
      },
      "CustomerRegistrationRequest": {
        "required": [
          "email",
          "phone",
          "responsible"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Электронная почта клиента"
          },
          "phone": {
            "type": "string",
            "description": "Номер телефона клиента"
          },
          "responsible": {
            "type": "string",
            "description": "Ответственный за клиента"
          },
          "inn": {
            "type": "string",
            "description": "ИНН клиета"
          },
          "login": {
            "type": "string",
            "description": "Логин клиента от портала"
          },
          "numberOfEmployees": {
            "type": "integer",
            "description": "Число сотрудников",
            "format": "int32"
          }
        }
      },
      "CustomerRegistrationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор регистрации нового клиента"
          },
          "status": {
            "type": "string",
            "description": "Статус регистрации"
          },
          "customerId": {
            "type": "string",
            "description": "Идентификатор нового клиента в случае успешной регистрации"
          }
        }
      },
      "ConfigurationAddRequest": {
        "required": [
          "name",
          "nomenclatureId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Название конфигурации"
          },
          "description": {
            "type": "string",
            "description": "Описание конфигурации"
          },
          "nomenclatureId": {
            "type": "string",
            "description": "Идентификатор используемой номенклатуры"
          }
        }
      },
      "Configuration": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор конфигурации"
          },
          "name": {
            "type": "string",
            "description": "Имя конфигурации"
          },
          "description": {
            "type": "string",
            "description": "Описание"
          }
        }
      },
      "ConfigurationVersionAddRequest": {
        "required": [
          "name",
          "version"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Новое имя версии конфигурации"
          },
          "version": {
            "type": "string",
            "description": "Поле версии",
            "example": "1.0.0"
          },
          "comment": {
            "type": "string",
            "description": "Комментарий"
          }
        }
      },
      "CreateApplicationFromCustomConfigurationRequest": {
        "required": [
          "configurationId",
          "configurationVersionId",
          "customerId",
          "ibType",
          "licenseCount",
          "name",
          "platformVersionId"
        ],
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "description": "Идентификатор клиента, для которого создается приложение"
          },
          "configurationId": {
            "type": "string",
            "description": "Идентификатор конфигурации, на основе которой создается приложение"
          },
          "configurationVersionId": {
            "type": "string",
            "description": "Идентификатор версии конфигурации"
          },
          "platformVersionId": {
            "type": "string",
            "description": "Идентификатор версии платформы"
          },
          "licenseCount": {
            "type": "integer",
            "description": "Количество лицензий для приложения",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Название создаваемого приложения"
          },
          "ibType": {
            "type": "string",
            "description": "Тип создаваемого приложения"
          }
        }
      },
      "Application": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор приложения"
          },
          "configurationId": {
            "type": "string",
            "description": "Идентификатор конфигурации, на базе которой создано приложение"
          },
          "configurationName": {
            "type": "string",
            "description": "Название конфигурации"
          },
          "configurationVersionId": {
            "type": "string",
            "description": "Идентификатор версии конфигурации, из которой было создано приложение"
          },
          "initialVersion": {
            "type": "string",
            "description": "Первоначальная версия конфигурации, из которой было создано приложение"
          },
          "version": {
            "type": "string",
            "description": "Версия приложения"
          },
          "platformVersionId": {
            "type": "string",
            "description": "Идентификатор версии платформы приложения"
          },
          "platformVersion": {
            "type": "string",
            "description": "Версия платформы"
          },
          "name": {
            "type": "string",
            "description": "Название приложения"
          },
          "status": {
            "type": "string",
            "description": "Статус приложения"
          },
          "url": {
            "type": "string",
            "description": "URL для доступа к приложению"
          },
          "licenseCount": {
            "type": "integer",
            "description": "Количество лицензий на приложение",
            "format": "int32"
          },
          "scheduledDeleteDate": {
            "type": "string",
            "description": "Дата запланированного удаления приложения",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean",
            "description": "Статус удаленного состояния приложения"
          },
          "customerId": {
            "type": "string",
            "description": "Идентификатор клиента, для которого было заказано приложение"
          },
          "tariff": {
            "type": "string",
            "description": "Тариф"
          },
          "billingState": {
            "type": "string",
            "description": "Режим базы"
          },
          "regnum": {
            "type": "string",
            "description": "Рег. номер"
          },
          "trialDateBegin": {
            "type": "string",
            "description": "Дата начала пробного периода",
            "format": "date-time"
          },
          "trialDateEnd": {
            "type": "string",
            "description": "Дата конца пробного периода",
            "format": "date-time"
          }
        }
      },
      "Credentials": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "MakeTiiDto": {
        "type": "object",
        "properties": {
          "credentials": {
            "$ref": "#/components/schemas/Credentials"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "ExchangeUploadInfo": {
        "type": "object",
        "properties": {
          "filename": {
            "type": "string",
            "description": "Имя файла"
          },
          "url": {
            "type": "string",
            "description": "Адрес для загрузки файла в хранилище"
          }
        }
      },
      "Backup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор бэкапа"
          },
          "date": {
            "type": "string",
            "description": "Дата создания бэкапа",
            "format": "date-time"
          },
          "size": {
            "type": "number",
            "description": "Размер бэкапа",
            "format": "float"
          },
          "backupType": {
            "type": "string",
            "description": "Тип бэкапа"
          },
          "link": {
            "type": "string",
            "description": "Ссылка для скачивания бэкапа"
          },
          "status": {
            "type": "string",
            "description": "Статус выполнения бэкапа"
          }
        }
      },
      "ServiceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор сервиса"
          },
          "name": {
            "type": "string",
            "description": "Название сервиса"
          },
          "kits": {
            "type": "array",
            "description": "Типы ресурса",
            "items": {
              "$ref": "#/components/schemas/ServiceKit"
            }
          },
          "tariff": {
            "$ref": "#/components/schemas/Tariff"
          }
        }
      },
      "ServiceKit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор типа ресурса"
          },
          "name": {
            "type": "string",
            "description": "Название типа ресурса"
          },
          "minUsageCount": {
            "type": "integer",
            "description": "Минимальное количество возможных лицензий",
            "format": "int32"
          },
          "maxUsageCount": {
            "type": "integer",
            "description": "Максимальное количество возможных лицензий",
            "format": "int32"
          },
          "options": {
            "type": "array",
            "description": "Опции к типу ресурса",
            "items": {
              "$ref": "#/components/schemas/ServiceKitOption"
            }
          }
        },
        "description": "Типы ресурса"
      },
      "ServiceKitOption": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор опции"
          },
          "name": {
            "type": "string",
            "description": "Название типа опции"
          },
          "minUsageCount": {
            "type": "integer",
            "description": "Минимальное количество применений опции",
            "format": "int32"
          },
          "maxUsageCount": {
            "type": "integer",
            "description": "Максимальное количество применений опции",
            "format": "int32"
          },
          "tariff": {
            "$ref": "#/components/schemas/Tariff"
          }
        },
        "description": "Опции к типу ресурса"
      },
      "Tariff": {
        "type": "object",
        "properties": {
          "paymentPeriod": {
            "type": "string",
            "description": "Период оплаты за пользование"
          },
          "currencyCode": {
            "type": "string",
            "description": "Код валюты оплаты"
          },
          "price": {
            "type": "number",
            "description": "Цена",
            "format": "float"
          },
          "recommendedClientPrice": {
            "type": "number",
            "description": "Рекомендованная розничная цена для клиентов",
            "format": "float"
          }
        },
        "description": "Тариф сервис"
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор клиента"
          },
          "email": {
            "type": "string",
            "description": "Электронная почта клиента"
          },
          "login": {
            "type": "string",
            "description": "Логин клиента"
          },
          "code": {
            "type": "string",
            "description": "Код абонента"
          },
          "inn": {
            "type": "string",
            "description": "ИНН клиента"
          },
          "kpp": {
            "type": "string",
            "description": "КПП клиента"
          },
          "name": {
            "type": "string",
            "description": "Имя клиента"
          },
          "responsible": {
            "type": "string",
            "description": "Имя ответственного за клиента"
          },
          "phone": {
            "type": "string",
            "description": "Телефон клиента"
          }
        }
      },
      "UploadInfo": {
        "type": "object",
        "properties": {
          "filename": {
            "type": "string",
            "description": "Имя файла, который планируется загрузить"
          },
          "url": {
            "type": "string",
            "description": "Ссылка для загрузки файла в хранилище"
          },
          "configurationVersion": {
            "$ref": "#/components/schemas/ConfigurationVersion"
          }
        }
      },
      "Nomenclature": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор номенклатуры"
          },
          "name": {
            "type": "string",
            "description": "Название номенклатуры"
          }
        }
      },
      "ApplicationVersion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          }
        }
      },
      "ApplicationResource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Тип ресурса приложения"
          },
          "value": {
            "type": "number",
            "description": "Количественное значение ресурса",
            "format": "float"
          }
        }
      },
      "TiiParam": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Имя параметра"
          },
          "title": {
            "type": "string",
            "description": "Описание параметра"
          }
        }
      },
      "Exchange": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Имя файла"
          },
          "url": {
            "type": "string",
            "description": "Адрес для скачивания файла из хранилища"
          },
          "size": {
            "type": "integer",
            "description": "Размер файла",
            "format": "int64"
          }
        }
      },
      "PlatformVersion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор версии платформы"
          },
          "version": {
            "type": "string",
            "description": "Версия"
          },
          "name": {
            "type": "string",
            "description": "Название версии платформы"
          }
        }
      }
    },
    "securitySchemes": {
      "bearer-jwt": {
        "type": "http",
        "name": "Authorization",
        "in": "header",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
